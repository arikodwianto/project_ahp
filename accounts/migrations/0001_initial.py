# Generated by Django 4.2 on 2025-06-13 13:31

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alternatif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Kegiatan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidang', models.CharField(choices=[('bina_konstruksi', 'Bina Konstruksi'), ('sumber_daya_air', 'Sumber Daya Air'), ('penataan_ruang', 'Penataan Ruang'), ('keuangan', 'Keuangan'), ('umum_kepegawaian', 'Umum & Kepegawaian'), ('program_cipta_karya', 'Program Cipta Karya'), ('binta_marga', 'Binta Marga'), ('upt_air_minum', 'UPT Air Minum')], max_length=100)),
                ('kode_kegiatan', models.CharField(max_length=20, unique=True)),
                ('nama_kegiatan', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Kriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SubKegiatan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kode_sub_kegiatan', models.CharField(max_length=20)),
                ('nama_sub_kegiatan', models.CharField(max_length=100)),
                ('kegiatan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_kegiatans', to='accounts.kegiatan')),
            ],
        ),
        migrations.CreateModel(
            name='Rekening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kode_rekening', models.CharField(max_length=20)),
                ('nama_rekening', models.CharField(max_length=100)),
                ('sub_kegiatan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rekenings', to='accounts.subkegiatan')),
            ],
        ),
        migrations.CreateModel(
            name='PerbandinganKriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nilai', models.FloatField()),
                ('kriteria_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perbandingan_kriteria_1', to='accounts.kriteria')),
                ('kriteria_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perbandingan_kriteria_2', to='accounts.kriteria')),
            ],
        ),
        migrations.CreateModel(
            name='PerbandinganAlternatif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nilai', models.FloatField()),
                ('alternatif_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatif1', to='accounts.alternatif')),
                ('alternatif_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatif2', to='accounts.alternatif')),
                ('kriteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.kriteria')),
            ],
        ),
        migrations.CreateModel(
            name='PenggunaanBelanja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_penggunaan', models.CharField(max_length=200)),
                ('jumlah', models.DecimalField(decimal_places=2, max_digits=14)),
                ('rekening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penggunaan_belanjas', to='accounts.rekening')),
            ],
        ),
        migrations.CreateModel(
            name='BobotKriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nilai_bobot', models.FloatField()),
                ('kriteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.kriteria')),
            ],
        ),
        migrations.AddField(
            model_name='alternatif',
            name='penggunaan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.penggunaanbelanja'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('kepala_dinas', 'Kepala Dinas'), ('admin_bidang', 'Admin Bidang'), ('jf_perencana', 'JF Perencana')], default='kepala_dinas', max_length=20)),
                ('bidang', models.CharField(blank=True, choices=[('bina_konstruksi', 'Bina Konstruksi'), ('sumber_daya_air', 'Sumber Daya Air'), ('penataan_ruang', 'Penataan Ruang'), ('keuangan', 'Keuangan'), ('umum_kepegawaian', 'Umum & Kepegawaian'), ('program_cipta_karya', 'Program Cipta Karya'), ('binta_marga', 'Binta Marga'), ('upt_air_minum', 'UPT Air Minum')], max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
